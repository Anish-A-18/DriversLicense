import java.time.LocalDate;
import java.time.Period;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class SearchDriver {
    private TableRowSorter<DefaultTableModel> rowSorter;
    private DefaultTableModel tableModel;

    public SearchDriver(DefaultTableModel tableModel) {
        this.tableModel = tableModel;
        rowSorter = new TableRowSorter<>(tableModel);
    }

    public void setSearch(String text) {
        if (text.trim().length() == 0) {
            rowSorter.setRowFilter(null);
        } else {
            if (text.equals("suspended")) {
                RowFilter<DefaultTableModel, Object> rf = RowFilter.numberFilter(RowFilter.ComparisonType.AFTER, 14, 7);
                rowSorter.setRowFilter(rf);
            } else if (text.equals("expired")) {
                RowFilter<DefaultTableModel, Object> rf = RowFilter.numberFilter(RowFilter.ComparisonType.BEFORE, 2024, 8);
                rowSorter.setRowFilter(rf);
            }else if (text.equals("over18")) {
                RowFilter<DefaultTableModel, Object> rf = RowFilter.numberFilter(RowFilter.ComparisonType.AFTER, 17, 4);
                rowSorter.setRowFilter(rf);
            } else if (text.equals("under18")) {
                RowFilter<DefaultTableModel, Object> rf = RowFilter.numberFilter(RowFilter.ComparisonType.BEFORE, 18, 4);
                rowSorter.setRowFilter(rf);
            } else if (text.equals("male")) {
                RowFilter<DefaultTableModel, Object> rf = new RowFilter<DefaultTableModel, Object>() {
                    @Override
                    public boolean include(Entry<? extends DefaultTableModel, ? extends Object> entry) {
                        int columnToFilter = 2;
                        return entry.getStringValue(columnToFilter).equals("Male");
                    }
                };
                rowSorter.setRowFilter(rf);
            } else if (text.equals("female")) {
                RowFilter<DefaultTableModel, Object> rf = new RowFilter<DefaultTableModel, Object>() {
                    @Override
                    public boolean include(Entry<? extends DefaultTableModel, ? extends Object> entry) {
                        int columnToFilter = 2;
                        return entry.getStringValue(columnToFilter).equals("Female");
                    }
                };
                rowSorter.setRowFilter(rf);
            }else {
                RowFilter<DefaultTableModel, Object> rf = RowFilter.regexFilter("(?i)" + text);
                rowSorter.setRowFilter(rf);
            }
        }
    }

    public TableRowSorter<DefaultTableModel> getRowSorter() {
        return rowSorter;
    }

}
